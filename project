from math import sin, cos, radians

f = input("Input your function: ")
a = float(input("What is a of the interval [a,b]: " ))
b = float(input("What is b of the interval [a,b]: " ))
i = a
l=[]
c=[]
max = 0
min = 0
u=[]
d=[]
ll=[a]
while i <= b+0.5: 
    # f prime (slope)
    x = i
    y1=(eval(f))
    x=i+.01
    y2=eval(f) 
    fprime= (y2-y1)/(0.01)
    x=i+.02
    y3=(eval(f))
    fprimea= (y3-y2)/(0.01)
    x = i-0.1
    y4=(eval(f))
    x=i-.02
    y5=eval(f) 
    fprimeb= (y5-y4)/(0.01)
    x = i
    #extrema
    if i == a:
        l.append(format(round(x,4)))
        if fprimea<0:
            print("maximum= {0}".format(round(x, 4)))
            maxx = x
            max = y1
        elif fprimea>0:
            print("minimum= {0}".format(round(x, 4)))
            minx = x
            min = y1
    elif fprime <= 0.1 and fprime >= -0.1: 
        if fprimea< 0 and fprimeb> 0:
            l.append(format(round(x,4)))
            print("maximum= {0}".format(round(x, 4)))
            #increasing
            length= l[len(l)-1]
            to= l[len(l)-2]
            print("increasing [" + str(to) + ", " + str(length) + "]")
            if y1 > max:
                maxx = x
                max = y1
        elif fprimea> 0 and fprimeb< 0:
            l.append(format(round(x,4)))
            print("minimum= {0}".format(round(x, 4)))
            length= l[len(l)-1]
            to= l[len(l)-2]
            print("decreasing [" + str(to) + ", " + str(length) + "]")
            if y1 < min:
                minx = x
                min = y1
    elif i >= b-.01 and i<= b+.01:
        l.append(format(round(x,4)))
        if fprimeb>0:
            print("maximum= {0}".format(round(x, 4)))
            length= l[len(l)-1]
            to= l[len(l)-2]
            print("increasing [" + str(to) + ", " + str(length) + "]")
            if y1 > max:
                maxx = x
                max = y1
        elif fprimeb<0:
            print("minimum= {0}".format(round(x, 4)))
            length= l[len(l)-1]
            to= l[len(l)-2]
            print("decreasing [" + str(to) + ", " +str(length) + "]")
            if y1 < min:
                minx = x
                min = y1
    i +=.05
    
#all of the neccesary y values for f double prime--fx=f(x), fxa=f(x+.01(above)), fxb=f(x-.01(below))
i=a
while i<=b: 
    
    x=i
    fx=eval(f)
    x=i+.01
    fxa=eval(f) 
    x=i-.01
    fxb=eval(f) 
    fprimea= (fxa-fx)/.01
    fprime= (fx-fxb)/.01
    x=i
    dprime= (fprimea-fprime)/0.01
    
    if dprime>=0:
        x=i
        u.append(x)
    if dprime<0:
        x=i
        d.append(x)
    
    i +=.05
    
    if dprime>-.05 and dprime<.05: 
        print("point of inflection= {0}".format(round(x, 4)))
        ll.append(x) 
ll.append(b) 
print(ll)
print(len(ll))
r=list(range(0,len(ll)))
print(r)
for p in r:
    n=ll[p]
    x=float(n)
    fx=eval(f)
    x=n+.01
    fxa=eval(f) 
    x=n-.01
    fxb=eval(f) 
    fprimea= (fxa-fx)/.01
    fprime= (fx-fxb)/.01
    x=n
    dprime= (fprimea-fprime)/0.01
    if dprime>0 and p<(len(ll)-1): 
        print("Concave up:") 
        u= ll.index(n)
        print("(" + str(n) + ", " + str(ll[p+1]) + ")")
    if dprime<0 and p<(len(ll)-1): 
        print("Concave down:") 
        u= ll.index(n)
        print("(" + str(n) + ", " + str(ll[p+1]) + ")")
    
'''
    x=p
    fx=eval(f)
    x=p+.01
    fxa=eval(f) 
    x=p-.01
    fxb=eval(f) 
    fprimea= (fxa-fx)/.01
    fprime= (fx-fxb)/.01
    x=p
    dprime= (fprimea-fprime)/0.01
    
    if dprime>0
    
if len(u)>0:
    uu = (u[0:len(u):len(u)-1])
    print("Concave up: ")
    print(uu)

elif len(d)>0:
    dd = d[::len(d)-1]
    print("Concave down: ")
    print(dd)
'''
    
'''
print(l)
print(c)
print(i)
max = format(round(max,4))
maxx = format(round(maxx,4))
min = format(round(min,4))
minx = format(round(minx,4))
print("Absolute Maximum: (" + str(maxx) + "," + str(max) + ")")
print("Absolute Minimum: (" + str(minx) + "," + str(min) + ")")
'''
